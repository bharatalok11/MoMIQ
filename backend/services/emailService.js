const nodemailer = require('nodemailer');

async function sendSummaryEmail(summary, emails) {
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    throw new Error('Email configuration missing. Please set EMAIL_USER and EMAIL_PASS in your .env file.');
  }

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: emails.join(', '),
    subject: 'Meeting Summary - AI Generated',
    html: `
      <h2>Meeting Summary</h2>
      <div style="white-space: pre-wrap; font-family: Arial, sans-serif;">
        ${summary}
      </div>
      <hr/>
      <p><em>Generated by the AI Meeting Notes Summarizer.</em></p>
    `,
  };

  try {
    return await transporter.sendMail(mailOptions);
  } catch (error) {
    console.error('Email transport error:', error.message);
    
    // Provide more specific error messages
    if (error.message.includes('Invalid login')) {
      throw new Error('Invalid email credentials. Please check your EMAIL_USER and EMAIL_PASS.');
    } else if (error.message.includes('Authentication failed')) {
      throw new Error('Email authentication failed. Please use an App Password if 2FA is enabled.');
    } else if (error.message.includes('Invalid recipient')) {
      throw new Error('Invalid email address format. Please check the recipient emails.');
    }
    
    throw new Error('Failed to send email. Please check your email configuration.');
  }
}

module.exports = { sendSummaryEmail };